{% extends 'admin_dashboard/dashboard.html.twig' %}

{% block title %}Tables - Soft UI Dashboard 3{% endblock %}

{% block stylesheets %}
  {{ parent() }}
  <!--     Fonts and icons     -->
  <link href="https://fonts.googleapis.com/css?family=Inter:300,400,500,600,700,800" rel="stylesheet" />
  <!-- Nucleo Icons -->
  <link href="https://demos.creative-tim.com/soft-ui-dashboard/assets/css/nucleo-icons.css" rel="stylesheet" />
  <link href="https://demos.creative-tim.com/soft-ui-dashboard/assets/css/nucleo-svg.css" rel="stylesheet" />
  <!-- Font Awesome Icons -->
  <script src="https://kit.fontawesome.com/42d5adcbca.js" crossorigin="anonymous"></script>
  <!-- CSS Files -->
  <link id="pagestyle" href="{{ asset('assets/css/soft-ui-dashboard.css?v=1.1.0') }}" rel="stylesheet" />
{% endblock %}

{% block body %}


  <main class="main-content position-relative max-height-vh-100 h-100 border-radius-lg ">
    <!-- Navbar -->
    <nav class="navbar navbar-main navbar-expand-lg px-0 mx-4 shadow-none border-radius-xl" id="navbarBlur" navbar-scroll="true">
      <div class="container-fluid py-1 px-3">

            <li class="nav-item d-xl-none ps-3 d-flex align-items-center">
              <a href="javascript:;" class="nav-link text-body p-0" id="iconNavbarSidenav">
                <div class="sidenav-toggler-inner">
                  <i class="sidenav-toggler-line"></i>
                  <i class="sidenav-toggler-line"></i>
                  <i class="sidenav-toggler-line"></i>
                </div>
              </a>
            </li>
            <li class="nav-item px-3 d-flex align-items-center">
              <a href="javascript:;" class="nav-link text-body p-0">
                <i class="fa fa-cog fixed-plugin-button-nav cursor-pointer"></i>
              </a>
            </li>
            <li class="nav-item dropdown pe-2 d-flex align-items-center">
              <a href="javascript:;" class="nav-link text-body p-0" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
                <i class="fa fa-bell cursor-pointer"></i>
              </a>
              <ul class="dropdown-menu  dropdown-menu-end  px-2 py-3 me-sm-n4" aria-labelledby="dropdownMenuButton">
                <li class="mb-2">
                  <a class="dropdown-item border-radius-md" href="javascript:;">
                    <div class="d-flex py-1">
                      <div class="my-auto">
                        <img src="{{ asset('assets/images/team-2.jpg') }}" class="avatar avatar-sm  me-3 ">
                      </div>
                      <div class="d-flex flex-column justify-content-center">
                        <h6 class="text-sm font-weight-normal mb-1">
                          <span class="font-weight-bold">New message</span> from Laur
                        </h6>
                        <p class="text-xs text-secondary mb-0 ">
                          <i class="fa fa-clock me-1"></i>
                          13 minutes ago
                        </p>
                      </div>
                    </div>
                  </a>
                </li>
                <li class="mb-2">
                  <a class="dropdown-item border-radius-md" href="javascript:;">
                    <div class="d-flex py-1">
                      <div class="my-auto">
                        <img src="{{ asset('assets/images/small-logos/logo-spotify.svg') }}" class="avatar avatar-sm bg-gradient-dark  me-3 ">
                      </div>
                      <div class="d-flex flex-column justify-content-center">
                        <h6 class="text-sm font-weight-normal mb-1">
                          <span class="font-weight-bold">New album</span> by Travis Scott
                        </h6>
                        <p class="text-xs text-secondary mb-0 ">
                          <i class="fa fa-clock me-1"></i>
                          1 day
                        </p>
                      </div>
                    </div>
                  </a>
                </li>
                <li>
                  <a class="dropdown-item border-radius-md" href="javascript:;">
                    <div class="d-flex py-1">
                      <div class="avatar avatar-sm bg-gradient-secondary  me-3  my-auto">
                        <svg width="12px" height="12px" viewBox="0 0 43 36" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
                          <title>credit-card</title>
                          <g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                            <g transform="translate(-2169.000000, -745.000000)" fill="#FFFFFF" fill-rule="nonzero">
                              <g transform="translate(1716.000000, 291.000000)">
                                <g transform="translate(453.000000, 454.000000)">
                                  <path class="color-background" d="M43,10.7482083 L43,3.58333333 C43,1.60354167 41.3964583,0 39.4166667,0 L3.58333333,0 C1.60354167,0 0,1.60354167 0,3.58333333 L0,10.7482083 L43,10.7482083 Z" opacity="0.593633743"></path>
                                  <path class="color-background" d="M0,16.125 L0,32.25 C0,34.2297917 1.60354167,35.8333333 3.58333333,35.8333333 L39.4166667,35.8333333 C41.3964583,35.8333333 43,34.2297917 43,32.25 L43,16.125 L0,16.125 Z M19.7083333,26.875 L7.16666667,26.875 L7.16666667,23.2916667 L19.7083333,23.2916667 L19.7083333,26.875 Z M35.8333333,26.875 L28.6666667,26.875 L28.6666667,23.2916667 L35.8333333,23.2916667 L35.8333333,26.875 Z"></path>
                                </g>
                              </g>
                            </g>
                          </g>
                        </svg>
                      </div>
                      <div class="d-flex flex-column justify-content-center">
                        <h6 class="text-sm font-weight-normal mb-1">
                          Payment successfully completed
                        </h6>
                        <p class="text-xs text-secondary mb-0 ">
                          <i class="fa fa-clock me-1"></i>
                          2 days
                        </p>
                      </div>
                    </div>
                  </a>
                </li>
              </ul>
            </li>
      </div>
    </nav>
    <!-- End Navbar -->

    <div class="container-fluid py-4">
      <div class="row">
        <div class="col-12">
          <div class="card mb-4">
            <div class="card-header pb-0 d-flex justify-content-between align-items-center">
              <h6 class="mb-0">Teams table</h6>
              <a class="btn btn-success btn-sm" href="javascript:void(0);">Add</a>
            </div>
            <div class="card-body px-0 pt-0 pb-2">
              <div class="table-responsive p-0">
                <table class="table align-items-center mb-0">
                  <thead>
                    <tr>
                      <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Name</th>
                      <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 ps-2">Game mode</th>
                      <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Categorie</th>
                      <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">nb Players</th>
                      <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Edit</th>
                      <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Delete</th>
                      
                      
                    </tr>
                  </thead>
                  <tbody>
                    {% for team in teams %}
                    <tr>
                      <td>
                        <div class="d-flex px-2 py-1">
                          <div>
                            <img src="{{ asset('assets/images/team-2.jpg') }}" class="avatar avatar-sm me-3" alt="user1">
                          </div>
                          <div class="d-flex flex-column justify-content-center">
                            <h6 class="mb-0 text-sm">{{ team.nom }}</h6>
                          </div>
                        </div>
                      </td>
                      <td>
                        <p class="text-xs font-weight-bold mb-0">{{ team.modeJeu }}</p>
                        <p class="text-xs text-secondary mb-0"></p>
                      </td>
                      <!--<td class="align-middle text-center text-sm">
                        <span class="badge badge-sm bg-gradient- author.status == 'Online' ? 'success' : 'secondary' }}"> author.status }}</span>
                      </td>-->
                      <td class="align-middle text-center">
                        <span class="text-secondary text-xs font-weight-bold">{{team.categorie }}</span>
                      </td>
                       <td class="align-middle text-center">
                        <span class="text-secondary text-xs font-weight-bold">{{ team.nombreJoueurs}}</span>
                      </td>
                      <td class="align-middle text-center">
                        <a class="btn btn-warning btn-sm edit-team" href="javascript:void(0);" 
                           data-team-id="{{ team.id }}"
                           data-team-name="{{ team.nom }}"
                           data-team-categorie="{{ team.categorie }}"
                           data-team-modejeu="{{ team.modeJeu }}"
                           data-team-nombrejoueurs="{{ team.nombreJoueurs }}">Edit</a>
                        </td>
                        <td class="align-middle text-center">
                        <a class="btn btn-danger btn-sm delete-team" href="javascript:void(0);" data-team-id="{{ team.id }}" data-team-name="{{ team.nom }}">Delete</a>
                        </td>
                    </tr>
                    {% endfor %}
                  </tbody>
                </table>
              </div>
            </div>
          </div>
        </div>
      </div>
      </div>
      

  </main>

  <!-- Edit Team Modal -->
  <div class="modal fade" id="editTeamModal" tabindex="-1" role="dialog" aria-labelledby="editTeamModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="editTeamModalLabel">Edit Team</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <form id="editTeamForm">
            <input type="hidden" id="editTeamId" name="id">
            <div class="mb-3">
              <label for="editTeamName" class="form-label">Team Name</label>
              <input type="text" class="form-control" id="editTeamName" name="nom" required>
            </div>
            <div class="mb-3">
              <label for="editTeamCategorie" class="form-label">Category</label>
              <input type="text" class="form-control" id="editTeamCategorie" name="categorie" required>
            </div>
            <div class="mb-3">
              <label for="editTeamModeJeu" class="form-label">Game Mode</label>
              <input type="text" class="form-control" id="editTeamModeJeu" name="modeJeu" required>
            </div>
            <div class="mb-3">
              <label for="editTeamNombreJoueurs" class="form-label">Number of Players</label>
              <input type="number" class="form-control" id="editTeamNombreJoueurs" name="nombreJoueurs" required>
            </div>
          </form>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
          <button type="button" class="btn btn-primary" id="saveEdit">Save Changes</button>
        </div>
      </div>
    </div>
  </div>

  <!-- Delete Confirmation Modal -->
  <div class="modal fade" id="deleteTeamModal" tabindex="-1" role="dialog" aria-labelledby="deleteTeamModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="deleteTeamModalLabel">Confirm Delete</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          Are you sure you want to delete the team "<span id="teamName"></span>"?
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
          <button type="button" class="btn btn-danger" id="confirmDelete">Delete</button>
        </div>
      </div>
    </div>
  </div>

  <!-- Add Team Modal -->
  <div class="modal fade" id="addTeamModal" tabindex="-1" role="dialog" aria-labelledby="addTeamModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="addTeamModalLabel">Add New Team</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <form id="addTeamForm">
            <div class="mb-3">
              <label for="addTeamName" class="form-label">Team Name</label>
              <input type="text" class="form-control" id="addTeamName" name="nom" required>
            </div>
            <div class="mb-3">
              <label for="addTeamCategorie" class="form-label">Category</label>
              <input type="text" class="form-control" id="addTeamCategorie" name="categorie" required>
            </div>
            <div class="mb-3">
              <label for="addTeamModeJeu" class="form-label">Game Mode</label>
              <input type="text" class="form-control" id="addTeamModeJeu" name="modeJeu" required>
            </div>
            <div class="mb-3">
              <label for="addTeamNombreJoueurs" class="form-label">Number of Players</label>
              <input type="number" class="form-control" id="addTeamNombreJoueurs" name="nombreJoueurs" required>
            </div>
          </form>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
          <button type="button" class="btn btn-primary" id="saveAdd">Add Team</button>
        </div>
      </div>
    </div>
  </div>

  <div class="fixed-plugin">
    <a class="fixed-plugin-button text-dark position-fixed px-3 py-2">
      <i class="fa fa-cog py-2"> </i>
    </a>
    <div class="card shadow-lg ">
      <div class="card-header pb-0 pt-3 ">
        <div class="float-start">
          <h5 class="mt-3 mb-0">Soft UI Configurator</h5>
          <p>See our dashboard options.</p>
        </div>
        <div class="float-end mt-4">
          <button class="btn btn-link text-dark p-0 fixed-plugin-close-button">
            <i class="fa fa-close"></i>
          </button>
        </div>
        <!-- End Toggle Button -->
      </div>
      <hr class="horizontal dark my-1">
      <div class="card-body pt-sm-3 pt-0">
        <!-- Sidebar Backgrounds -->
        <div>
          <h6 class="mb-0">Sidebar Colors</h6>
        </div>
        <a href="javascript:void(0)" class="switch-trigger background-color">
          <div class="badge-colors my-2 text-start">
            <span class="badge filter bg-primary active" data-color="primary" onclick="sidebarColor(this)"></span>
            <span class="badge filter bg-gradient-dark" data-color="dark" onclick="sidebarColor(this)"></span>
            <span class="badge filter bg-gradient-info" data-color="info" onclick="sidebarColor(this)"></span>
            <span class="badge filter bg-gradient-success" data-color="success" onclick="sidebarColor(this)"></span>
            <span class="badge filter bg-gradient-warning" data-color="warning" onclick="sidebarColor(this)"></span>
            <span class="badge filter bg-gradient-danger" data-color="danger" onclick="sidebarColor(this)"></span>
          </div>
        </a>
        <!-- Sidenav Type -->
        <div class="mt-3">
          <h6 class="mb-0">Sidenav Type</h6>
          <p class="text-sm">Choose between 2 different sidenav types.</p>
        </div>
        <div class="d-flex">
          <button class="btn btn-primary w-100 px-3 mb-2 active" data-class="bg-transparent" onclick="sidebarType(this)">Transparent</button>
          <button class="btn btn-primary w-100 px-3 mb-2 ms-2" data-class="bg-white" onclick="sidebarType(this)">White</button>
        </div>
        <p class="text-sm d-xl-none d-block mt-2">You can change the sidenav type just on desktop view.</p>
        <!-- Navbar Fixed -->
        <div class="mt-3">
          <h6 class="mb-0">Navbar Fixed</h6>
        </div>
        <div class="form-check form-switch ps-0">
          <input class="form-check-input mt-1 ms-auto" type="checkbox" id="navbarFixed" onclick="navbarFixed(this)">
        </div>
        <hr class="horizontal dark my-sm-4">
        <a class="btn bg-gradient-dark w-100" href="https://www.creative-tim.com/product/soft-ui-dashboard">Free Download</a>
        <a class="btn btn-outline-dark w-100" href="https://www.creative-tim.com/learning-lab/bootstrap/license/soft-ui-dashboard">View documentation</a>
        <div class="w-100 text-center">
          <a class="github-button" href="https://github.com/creativetimofficial/soft-ui-dashboard" data-icon="octicon-star" data-size="large" data-show-count="true" aria-label="Star creativetimofficial/soft-ui-dashboard on GitHub">Star</a>
          <h6 class="mt-3">Thank you for sharing!</h6>
          <a href="https://twitter.com/intent/tweet?text=Check%20Soft%20UI%20Dashboard%20made%20by%20%40CreativeTim%20%23webdesign%20%23dashboard%20%23bootstrap5&amp;url=https%3A%2F%2Fwww.creative-tim.com%2Fproduct%2Fsoft-ui-dashboard" class="btn btn-dark mb-0 me-2" target="_blank">
            <i class="fab fa-twitter me-1" aria-hidden="true"></i> Tweet
          </a>
          <a href="https://www.facebook.com/sharer/sharer.php?u=https://www.creative-tim.com/product/soft-ui-dashboard" class="btn btn-dark mb-0 me-2" target="_blank">
            <i class="fab fa-facebook-square me-1" aria-hidden="true"></i> Share
          </a>
        </div>
      </div>
    </div>
  </div>
{% endblock %}

{% block javascripts %}
  {{ parent() }}
  <!--   Core JS Files   -->
  <script src="{{ asset('assets/js/core/popper.min.js') }}"></script>
  <script src="{{ asset('assets/js/core/bootstrap.min.js') }}"></script>
  <script src="{{ asset('assets/js/plugins/perfect-scrollbar.min.js') }}"></script>
  <script src="{{ asset('assets/js/plugins/smooth-scrollbar.min.js') }}"></script>
  <script>
    var win = navigator.platform.indexOf('Win') > -1;
    if (win && document.querySelector('#sidenav-scrollbar')) {
      var options = {
        damping: '0.5'
      }
      Scrollbar.init(document.querySelector('#sidenav-scrollbar'), options);
    }

    // Edit team modal
    document.addEventListener('DOMContentLoaded', function() {
      const editButtons = document.querySelectorAll('.edit-team');
      const editModal = new bootstrap.Modal(document.getElementById('editTeamModal'));
      const editForm = document.getElementById('editTeamForm');
      const saveEditBtn = document.getElementById('saveEdit');
      let currentTeamId = null;
      let currentRow = null;

      editButtons.forEach(button => {
        button.addEventListener('click', function() {
          const teamId = this.getAttribute('data-team-id');
          const teamName = this.getAttribute('data-team-name');
          const teamCategorie = this.getAttribute('data-team-categorie');
          const teamModeJeu = this.getAttribute('data-team-modejeu');
          const teamNombreJoueurs = this.getAttribute('data-team-nombrejoueurs');
          
          currentTeamId = teamId;
          currentRow = this.closest('tr');
          
          // Fill the form with current team data
          document.getElementById('editTeamId').value = teamId;
          document.getElementById('editTeamName').value = teamName;
          document.getElementById('editTeamCategorie').value = teamCategorie;
          document.getElementById('editTeamModeJeu').value = teamModeJeu;
          document.getElementById('editTeamNombreJoueurs').value = teamNombreJoueurs;
          
          editModal.show();
        });
      });

      saveEditBtn.addEventListener('click', function() {
        if (currentTeamId) {
          const formData = new FormData(editForm);
          const data = Object.fromEntries(formData.entries());
          
          fetch(`/admin/teams/${currentTeamId}/edit`, {
            method: 'PUT',
            headers: {
              'Content-Type': 'application/json',
              'X-Requested-With': 'XMLHttpRequest'
            },
            body: JSON.stringify(data)
          })
          .then(response => {
            if (!response.ok) {
              throw new Error('Network response was not ok');
            }
            return response.json();
          })
          .then(data => {
            if (data.success) {
              // Update the row with new data
              const row = currentRow;
              row.querySelector('h6.mb-0.text-sm').textContent = data.team.nom;
              row.querySelector('td:nth-child(2) p.text-xs.font-weight-bold.mb-0').textContent = data.team.modeJeu;
              row.querySelector('td:nth-child(3) span').textContent = data.team.categorie;
              row.querySelector('td:nth-child(4) span').textContent = data.team.nombreJoueurs;
              
              // Update the data attributes on the edit button
              const editButton = row.querySelector('.edit-team');
              editButton.setAttribute('data-team-name', data.team.nom);
              editButton.setAttribute('data-team-categorie', data.team.categorie);
              editButton.setAttribute('data-team-modejeu', data.team.modeJeu);
              editButton.setAttribute('data-team-nombrejoueurs', data.team.nombreJoueurs);
              
              // Show success message
              const toastContainer = document.createElement('div');
              toastContainer.className = 'toast-container position-fixed bottom-0 end-0 p-3';
              toastContainer.innerHTML = `
                <div class="toast align-items-center text-white bg-success border-0" role="alert" aria-live="assertive" aria-atomic="true">
                  <div class="d-flex">
                    <div class="toast-body">
                      Team updated successfully
                    </div>
                    <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                  </div>
                </div>
              `;
              document.body.appendChild(toastContainer);
              const toast = new bootstrap.Toast(toastContainer.querySelector('.toast'));
              toast.show();
              // Remove the toast container after it's hidden
              toastContainer.querySelector('.toast').addEventListener('hidden.bs.toast', () => {
                toastContainer.remove();
              });
            } else {
              throw new Error(data.message || 'Failed to update team');
            }
          })
          .catch(error => {
            console.error('Error:', error);
            const toastContainer = document.createElement('div');
            toastContainer.className = 'toast-container position-fixed bottom-0 end-0 p-3';
            toastContainer.innerHTML = `
              <div class="toast align-items-center text-white bg-danger border-0" role="alert" aria-live="assertive" aria-atomic="true">
                <div class="d-flex">
                  <div class="toast-body">
                    ${error.message}
                  </div>
                  <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
              </div>
            `;
            document.body.appendChild(toastContainer);
            const toast = new bootstrap.Toast(toastContainer.querySelector('.toast'));
            toast.show();
            // Remove the toast container after it's hidden
            toastContainer.querySelector('.toast').addEventListener('hidden.bs.toast', () => {
              toastContainer.remove();
            });
          })
          .finally(() => {
            editModal.hide();
          });
        }
      });
    });

    // Delete team confirmation modal
    document.addEventListener('DOMContentLoaded', function() {
      const deleteButtons = document.querySelectorAll('.delete-team');
      const deleteModal = new bootstrap.Modal(document.getElementById('deleteTeamModal'));
      const teamNameSpan = document.getElementById('teamName');
      const confirmDeleteBtn = document.getElementById('confirmDelete');
      let currentTeamId = null;
      let currentRow = null;

      deleteButtons.forEach(button => {
        button.addEventListener('click', function() {
          const teamId = this.getAttribute('data-team-id');
          const teamName = this.getAttribute('data-team-name');
          currentTeamId = teamId;
          currentRow = this.closest('tr');
          teamNameSpan.textContent = teamName;
          deleteModal.show();
        });
      });

      confirmDeleteBtn.addEventListener('click', function() {
        if (currentTeamId) {
          // Make AJAX call to delete the team
          fetch(`/admin/teams/${currentTeamId}/delete`, {
            method: 'DELETE',
            headers: {
              'X-Requested-With': 'XMLHttpRequest'
            }
          })
          .then(response => {
            if (!response.ok) {
              throw new Error('Network response was not ok');
            }
            return response.json();
          })
          .then(data => {
            if (data.success) {
              // Remove the row from the table
              currentRow.remove();
              // Show success message
              const toastContainer = document.createElement('div');
              toastContainer.className = 'toast-container position-fixed bottom-0 end-0 p-3';
              toastContainer.innerHTML = `
                <div class="toast align-items-center text-white bg-success border-0" role="alert" aria-live="assertive" aria-atomic="true">
                  <div class="d-flex">
                    <div class="toast-body">
                      Team deleted successfully
                    </div>
                    <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                  </div>
                </div>
              `;
              document.body.appendChild(toastContainer);
              const toast = new bootstrap.Toast(toastContainer.querySelector('.toast'));
              toast.show();
              // Remove the toast container after it's hidden
              toastContainer.querySelector('.toast').addEventListener('hidden.bs.toast', () => {
                toastContainer.remove();
              });
            } else {
              throw new Error(data.message || 'Failed to delete team');
            }
          })
          .catch(error => {
            console.error('Error:', error);
            const toastContainer = document.createElement('div');
            toastContainer.className = 'toast-container position-fixed bottom-0 end-0 p-3';
            toastContainer.innerHTML = `
              <div class="toast align-items-center text-white bg-danger border-0" role="alert" aria-live="assertive" aria-atomic="true">
                <div class="d-flex">
                  <div class="toast-body">
                    ${error.message}
                  </div>
                  <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
              </div>
            `;
            document.body.appendChild(toastContainer);
            const toast = new bootstrap.Toast(toastContainer.querySelector('.toast'));
            toast.show();
            // Remove the toast container after it's hidden
            toastContainer.querySelector('.toast').addEventListener('hidden.bs.toast', () => {
              toastContainer.remove();
            });
          })
          .finally(() => {
            deleteModal.hide();
          });
        }
      });
    });

    // Add team modal
    document.addEventListener('DOMContentLoaded', function() {
      const addButton = document.querySelector('.btn-success');
      const addModal = new bootstrap.Modal(document.getElementById('addTeamModal'));
      const addForm = document.getElementById('addTeamForm');
      const saveAddBtn = document.getElementById('saveAdd');

      addButton.addEventListener('click', function() {
        addForm.reset();
        addModal.show();
      });

      saveAddBtn.addEventListener('click', function() {
        const formData = new FormData(addForm);
        const data = Object.fromEntries(formData.entries());
        
        fetch('/admin/teams/add', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'X-Requested-With': 'XMLHttpRequest'
          },
          body: JSON.stringify(data)
        })
        .then(response => {
          if (!response.ok) {
            throw new Error('Network response was not ok');
          }
          return response.json();
        })
        .then(data => {
          if (data.success) {
            // Show success message
            const toastContainer = document.createElement('div');
            toastContainer.className = 'toast-container position-fixed bottom-0 end-0 p-3';
            toastContainer.innerHTML = `
              <div class="toast align-items-center text-white bg-success border-0" role="alert" aria-live="assertive" aria-atomic="true">
                <div class="d-flex">
                  <div class="toast-body">
                    Team added successfully
                  </div>
                  <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
              </div>
            `;
            document.body.appendChild(toastContainer);
            const toast = new bootstrap.Toast(toastContainer.querySelector('.toast'));
            toast.show();
            
            // Refresh the page after a short delay to show the success message
            setTimeout(() => {
              window.location.reload();
            }, 1500);
          } else {
            throw new Error(data.message || 'Failed to add team');
          }
        })
        .catch(error => {
          console.error('Error:', error);
          const toastContainer = document.createElement('div');
          toastContainer.className = 'toast-container position-fixed bottom-0 end-0 p-3';
          toastContainer.innerHTML = `
            <div class="toast align-items-center text-white bg-danger border-0" role="alert" aria-live="assertive" aria-atomic="true">
              <div class="d-flex">
                <div class="toast-body">
                  ${error.message}
                </div>
                <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
              </div>
            </div>
          `;
          document.body.appendChild(toastContainer);
          const toast = new bootstrap.Toast(toastContainer.querySelector('.toast'));
          toast.show();
          // Remove the toast container after it's hidden
          toastContainer.querySelector('.toast').addEventListener('hidden.bs.toast', () => {
            toastContainer.remove();
          });
        })
        .finally(() => {
          addModal.hide();
        });
      });
    });
  </script>
  <!-- Github buttons -->
  <script async defer src="https://buttons.github.io/buttons.js"></script>
  <!-- Control Center for Soft Dashboard: parallax effects, scripts for the example pages etc -->
  <script src="{{ asset('assets/js/soft-ui-dashboard.min.js?v=1.1.0') }}"></script>
{% endblock %}