{% extends 'admin_dashboard/dashboard.html.twig' %}

{% block title %}Users Management - Soccer{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link href="{{ asset('assets/css/font-awesome.min.css') }}" rel="stylesheet" />

  <!--     Fonts and icons     -->
  <link href="https://fonts.googleapis.com/css?family=Inter:300,400,500,600,700,800" rel="stylesheet" />
  <!-- Nucleo Icons -->
  <link href="https://demos.creative-tim.com/soft-ui-dashboard/assets/css/nucleo-icons.css" rel="stylesheet" />
  <link href="https://demos.creative-tim.com/soft-ui-dashboard/assets/css/nucleo-svg.css" rel="stylesheet" />
  <!-- Font Awesome Icons -->
  <script src="https://kit.fontawesome.com/42d5adcbca.js" crossorigin="anonymous"></script>
  <!-- CSS Files -->
  <link id="pagestyle" href="{{ asset('assets/css/soft-ui-dashboard.css?v=1.1.0') }}" rel="stylesheet" />
  <style>
    /* New pagination styles */
    .pagination {
      width: 100%;
      padding: 0 1rem;
      margin-top: 1.5rem;
      display: flex;
      justify-content: center;
      gap: 0.25rem;
    }

    .page-btn {
      color: #000000;
      width: 2.5rem;
      height: 2.5rem;
      display: inline-flex;
      flex-shrink: 0;
      justify-content: center;
      align-items: center;
      text-decoration: none;
      background-color: #ffffff;
      border-radius: 50%;
      cursor: pointer;
      transition: color 128ms ease-out, background-color 128ms ease-out;
      border: 1px solid #e9ecef;
      box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
    }

    .page-btn:hover {
      background-color: #f8f9fa;
      transform: translateY(-1px);
      box-shadow: 0 7px 14px rgba(50, 50, 93, 0.1), 0 3px 6px rgba(0, 0, 0, 0.08);
    }

    .page-btn:target {
      color: #ffffff;
      background-color: #344767;
      border-color: #344767;
      box-shadow: 0 4px 6px -1px rgba(52, 71, 103, 0.4), 0 2px 4px -1px rgba(52, 71, 103, 0.3);
    }

    .page-step {
      display: none;
    }

    .pagination:not(:has(.page-btn:target)) .page-step[data-shown="1"] {
      display: inline-flex;
    }

    @for $i from 1 through 5 {
      .pagination:has(#page-#{$i}:target) .page-step[data-shown="#{$i}"] {
        display: inline-flex;
      }
    }

    .pagination {
      display: flex;
      padding-left: 0;
      list-style: none;
      border-radius: 0.5rem;
      justify-content: center;
      margin-top: 2rem;
      gap: 0.5rem;
    }
    .pagination li {
      margin: 0;
    }
    .pagination li a {
      position: relative;
      display: flex;
      align-items: center;
      justify-content: center;
      min-width: 2.5rem;
      height: 2.5rem;
      padding: 0.5rem 1rem;
      font-size: 0.875rem;
      font-weight: 500;
      color: #344767;
      background-color: #fff;
      border: 1px solid #e9ecef;
      border-radius: 0.5rem;
      transition: all 0.2s ease-in-out;
      text-decoration: none;
      box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
    }
    .pagination li a:hover {
      color: #344767;
      background-color: #f8f9fa;
      border-color: #e9ecef;
      transform: translateY(-1px);
      box-shadow: 0 7px 14px rgba(50, 50, 93, 0.1), 0 3px 6px rgba(0, 0, 0, 0.08);
    }
    .pagination li.active a {
      color: #fff;
      background-color: #344767;
      border-color: #344767;
      box-shadow: 0 4px 6px -1px rgba(52, 71, 103, 0.4), 0 2px 4px -1px rgba(52, 71, 103, 0.3);
    }
    .pagination li.disabled a {
      color: #adb5bd;
      background-color: #f8f9fa;
      border-color: #e9ecef;
      pointer-events: none;
      box-shadow: none;
    }
    .pagination li a:focus {
      outline: none;
      box-shadow: 0 0 0 0.2rem rgba(52, 71, 103, 0.25);
    }
    /* Enhanced prev/next buttons */
    .pagination li:first-child a,
    .pagination li:last-child a {
      min-width: 3.5rem;
      background-color: #344767;
      color: #fff;
      border-color: #344767;
    }
    .pagination li:first-child a:hover,
    .pagination li:last-child a:hover {
      background-color: #2a3a52;
      transform: translateY(-2px);
      box-shadow: 0 8px 16px rgba(52, 71, 103, 0.3);
    }
    .pagination li.disabled:first-child a,
    .pagination li.disabled:last-child a {
      background-color: #e9ecef;
      color: #adb5bd;
      border-color: #e9ecef;
    }
  </style>
{% endblock %}


{% block body %}
    <div class="container-fluid py-4">
        <div class="row">
            <div class="col-12">
                <div class="card mb-4">
                    <div class="card-header pb-0">
                        <div class="d-flex justify-content-between align-items-center flex-wrap">
                            <div class="mb-3 mb-lg-0">
                                <h6>Users Management</h6>
                                <p class="text-sm mb-0">
                                    <i class="fas fa-check-circle text-info"></i>
                                    <span class="font-weight-bold ms-1">{{ pagination.getTotalItemCount }} users</span> in total
                                </p>
                            </div>
                            <div class="d-flex gap-3 align-items-center">
                                <form method="get" class="mb-0" id="searchForm">
                                    <div class="input-group">
                                        <input type="text" name="q" id="searchInput" class="form-control" placeholder="Search users..." value="{{ app.request.query.get('q') }}">
                                        <button type="submit" class="btn btn-outline-primary mb-0">
                                            <i class="fas fa-search"></i>
                                        </button>
                                    </div>
                                </form>
                                <a href="{{ path('app_admin_dashboard_user_new') }}" class="btn bg-gradient-info mb-0">
                                    <i class="fas fa-user-plus me-2"></i> Add New User
                                </a>
                            </div>
                        </div>
                    </div>
                    <div class="card-body px-0 pt-0 pb-2">
                        {% for message in app.flashes('success') %}
                            <div class="alert alert-success alert-dismissible fade show" role="alert">
                                {{ message }}
                                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                            </div>
                        {% endfor %}
                        <div class="table-responsive p-0">
                            <table class="table align-items-center mb-0">
                                <thead>
                                <tr>
                                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">User</th>
                                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 ps-2">Role</th>
                                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Status</th>
                                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Team</th>
                                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Actions</th>
                                </tr>
                                </thead>
                                <tbody id="usersTableBody">
                                {% for user in pagination %}
                                    <tr>
                                        <td>
                                            <div class="d-flex px-2 py-1">
                                                <div>
                                                    <img src="{{ user.profilepicture ? asset('uploads/profile/' ~ user.profilepicture) : asset('assets/images/default-avatar.png') }}"
                                                         class="avatar avatar-sm me-3"
                                                         alt="{{ user.firstname }} {{ user.lastname }}"
                                                         onerror="this.src='{{ asset('assets/images/default-avatar.png') }}'">
                                                </div>
                                                <div class="d-flex flex-column justify-content-center">
                                                    <h6 class="mb-0 text-sm">{{ user.firstname }} {{ user.lastname }}</h6>
                                                    <p class="text-xs text-secondary mb-0">{{ user.email }}</p>
                                                </div>
                                            </div>
                                        </td>
                                        <td>
                                            <p class="text-xs font-weight-bold mb-0">{{ user.role }}</p>
                                        </td>
                                        <td class="align-middle text-center text-sm">
                                            <div class="d-inline-block px-3 py-1 rounded-3 text-white"
                                                 style="background-color: {{ user.isActive ? '#2dce89' : '#f5365c' }}; min-width: 80px;">
                                                {{ user.isActive ? 'Active' : 'Inactive' }}
                                            </div>
                                        </td>
                                        <td class="align-middle text-center">
                                        <span class="text-secondary text-xs font-weight-bold">
                                            {{ user.team ? user.team.nom : 'No team' }}
                                        </span>
                                        </td>
                                        <td class="align-middle text-center">
                                            <div class="d-flex justify-content-center align-items-center">
                                                <a href="{{ path('app_admin_dashboard_user_edit', {'id': user.id}) }}"
                                                   class="btn btn-link p-1"
                                                   data-bs-toggle="tooltip"
                                                   data-bs-placement="top"
                                                   title="Edit user">
                                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-warning">
                                                        <path d="M17 3a2.85 2.85 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z"></path>
                                                    </svg>
                                                </a>
                                                <form action="{{ path('app_admin_dashboard_user_delete', {'id': user.id}) }}"
                                                      method="post"
                                                      class="d-inline ms-2"
                                                      onsubmit="return confirm('Are you sure you want to delete this user?');">
                                                    <input type="hidden" name="_method" value="DELETE">
                                                    <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ user.id) }}">
                                                    <button type="submit"
                                                            class="btn btn-link p-1"
                                                            data-bs-toggle="tooltip"
                                                            data-bs-placement="top"
                                                            title="Delete user">
                                                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-danger">
                                                            <polyline points="3 6 5 6 21 6"></polyline>
                                                            <path d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"></path>
                                                            <line x1="10" y1="11" x2="10" y2="17"></line>
                                                            <line x1="14" y1="11" x2="14" y2="17"></line>
                                                        </svg>
                                                    </button>
                                                </form>
                                            </div>
                                        </td>
                                    </tr>
                                {% else %}
                                    <tr>
                                        <td colspan="5" class="text-center py-4">
                                            <div class="text-muted">
                                                <i class="fas fa-users fa-2x mb-3"></i>
                                                <p class="mb-0">No users found</p>
                                            </div>
                                        </td>
                                    </tr>
                                {% endfor %}
                                </tbody>
                            </table>
                        </div>
                        <div class="d-flex justify-content-center mt-4">
                            <nav aria-label="Page navigation">
                                <ul class="pagination pagination-sm">
                                    {% if pagination.getCurrentPageNumber() > 1 %}
                                        <li class="page-item">
                                            <a class="page-link" href="{{ path('app_admin_dashboard_users', {'page': pagination.getCurrentPageNumber() - 1, 'q': app.request.query.get('q')}) }}" aria-label="Previous">
                                                <span aria-hidden="true">&laquo;</span>
                                            </a>
                                        </li>
                                    {% endif %}

                                    {% for page in range(max(1, pagination.getCurrentPageNumber() - 2), min(pagination.getPageCount(), pagination.getCurrentPageNumber() + 2)) %}
                                        <li class="page-item {{ page == pagination.getCurrentPageNumber() ? 'active' : '' }}">
                                            <a class="page-link" href="{{ path('app_admin_dashboard_users', {'page': page, 'q': app.request.query.get('q')}) }}">{{ page }}</a>
                                        </li>
                                    {% endfor %}

                                    {% if pagination.getCurrentPageNumber() < pagination.getPageCount() %}
                                        <li class="page-item">
                                            <a class="page-link" href="{{ path('app_admin_dashboard_users', {'page': pagination.getCurrentPageNumber() + 1, 'q': app.request.query.get('q')}) }}" aria-label="Next">
                                                <span aria-hidden="true">&raquo;</span>
                                            </a>
                                        </li>
                                    {% endif %}
                                </ul>
                            </nav>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <style>
        .btn-link:hover svg.text-warning {
            color: #e4a11b !important;
            transform: scale(1.2);
            transition: all 0.2s ease;
        }

        .btn-link:hover svg.text-danger {
            color: #dc3545 !important;
            transform: scale(1.2);
            transition: all 0.2s ease;
        }

        .btn-link svg {
            transition: all 0.2s ease;
        }

        /* Pagination Styles */
        .pagination {
            margin-bottom: 0;
        }

        .page-link {
            color: #344767;
            border: none;
            padding: 0.5rem 0.75rem;
            margin: 0 2px;
            border-radius: 0.375rem;
            transition: all 0.2s ease;
        }

        .page-link:hover {
            background-color: #e9ecef;
            color: #344767;
        }

        .page-item.active .page-link {
            background-color: #344767;
            color: white;
            border-color: #344767;
        }

        .page-item.disabled .page-link {
            color: #6c757d;
            pointer-events: none;
            background-color: #fff;
        }
    </style>

    {% block javascripts %}
        {{ parent() }}
        <script>
            document.addEventListener('DOMContentLoaded', function() {
                const searchForm = document.getElementById('searchForm');
                const searchInput = document.getElementById('searchInput');
                const usersTableBody = document.getElementById('usersTableBody');
                let searchTimeout;
                let currentSearchTerm = '';

                // Handle form submission
                searchForm.addEventListener('submit', function(e) {
                    e.preventDefault();
                    const searchTerm = searchInput.value.trim();
                    if (searchTerm !== currentSearchTerm) {
                        currentSearchTerm = searchTerm;
                        performSearch(searchTerm);
                    }
                });

                // Handle input changes
                searchInput.addEventListener('input', function() {
                    clearTimeout(searchTimeout);
                    const searchTerm = searchInput.value.trim();
                    
                    // If the search term is empty, perform search immediately
                    if (searchTerm === '') {
                        currentSearchTerm = '';
                        performSearch('');
                        return;
                    }
                    
                    // Otherwise, debounce the search
                    searchTimeout = setTimeout(function() {
                        if (searchTerm !== currentSearchTerm) {
                            currentSearchTerm = searchTerm;
                            performSearch(searchTerm);
                        }
                    }, 300);
                });

                function performSearch(searchTerm) {
                    const url = new URL(window.location.href);
                    url.searchParams.set('q', searchTerm);
                    url.searchParams.set('ajax', '1');

                    fetchWithRetry(url.toString(), 3)
                        .then(data => {
                            updateTable(data.users);
                            updatePagination(data.pagination);
                        })
                        .catch(error => {
                            console.error('Error:', error);
                            const errorDiv = document.createElement('div');
                            errorDiv.className = 'alert alert-danger alert-dismissible fade show';
                            errorDiv.innerHTML = `
                                <strong>Error!</strong> Failed to load users. Please try again.
                                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                            `;
                            document.querySelector('.card-body').prepend(errorDiv);
                        });
                }

                // Add a retry mechanism for fetch requests
                function fetchWithRetry(url, retries = 3, delay = 1000) {
                    return new Promise((resolve, reject) => {
                        const attempt = (attemptNumber) => {
                            fetch(url, {
                                headers: {
                                    'X-Requested-With': 'XMLHttpRequest'
                                }
                            })
                            .then(response => {
                                if (!response.ok) {
                                    // If we have retries left and it's a 502 error, retry
                                    if (attemptNumber < retries && (response.status === 502 || response.status === 503)) {
                                        console.log(`Attempt ${attemptNumber} failed with status ${response.status}. Retrying in ${delay}ms...`);
                                        setTimeout(() => attempt(attemptNumber + 1), delay);
                                    } else {
                                        throw new Error(`HTTP error! Status: ${response.status}`);
                                    }
                                } else {
                                    return response.json();
                                }
                            })
                            .then(data => resolve(data))
                            .catch(error => {
                                if (attemptNumber < retries && (error.message.includes('502') || error.message.includes('503'))) {
                                    console.log(`Attempt ${attemptNumber} failed. Retrying in ${delay}ms...`);
                                    setTimeout(() => attempt(attemptNumber + 1), delay);
                                } else {
                                    reject(error);
                                }
                            });
                        };
                        
                        attempt(1);
                    });
                }

                function updateTable(users) {
                    let html = '';
                    if (users.length === 0) {
                        html = `
                            <tr>
                                <td colspan="5" class="text-center py-4">
                                    <div class="text-muted">
                                        <i class="fas fa-users fa-2x mb-3"></i>
                                        <p class="mb-0">No users found</p>
                                    </div>
                                </td>
                            </tr>
                        `;
                    } else {
                        users.forEach(user => {
                            html += `
                                <tr>
                                    <td>
                                        <div class="d-flex px-2 py-1">
                                            <div>
                                                <img src="${user.profilepicture ? '/uploads/profile/' + user.profilepicture : '/assets/images/default-avatar.png'}"
                                                     class="avatar avatar-sm me-3"
                                                     alt="${user.firstname} ${user.lastname}"
                                                     onerror="this.src='/assets/images/default-avatar.png'">
                                            </div>
                                            <div class="d-flex flex-column justify-content-center">
                                                <h6 class="mb-0 text-sm">${user.firstname} ${user.lastname}</h6>
                                                <p class="text-xs text-secondary mb-0">${user.email}</p>
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        <p class="text-xs font-weight-bold mb-0">${user.role}</p>
                                    </td>
                                    <td class="align-middle text-center text-sm">
                                        <span class="badge badge-sm ${user.isActive ? 'bg-gradient-success' : 'bg-gradient-secondary'}">
                                            ${user.isActive ? 'Active' : 'Inactive'}
                                        </span>
                                    </td>
                                    <td class="align-middle text-center">
                                        <span class="text-secondary text-xs font-weight-bold">${user.team ? user.team.nom : 'No team'}</span>
                                    </td>
                                    <td class="align-middle text-center">
                                        <div class="d-flex justify-content-center align-items-center">
                                            <a href="/admin/dashboard/users/${user.id}/edit"
                                               class="btn btn-link p-1"
                                               data-bs-toggle="tooltip"
                                               data-bs-placement="top"
                                               title="Edit user">
                                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-warning">
                                                    <path d="M17 3a2.85 2.85 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z"></path>
                                                </svg>
                                            </a>
                                            <form action="/admin/dashboard/users/${user.id}/delete"
                                                  method="post"
                                                  class="d-inline ms-2"
                                                  onsubmit="return confirm('Are you sure you want to delete this user?');">
                                                <input type="hidden" name="_method" value="DELETE">
                                                <input type="hidden" name="_token" value="${user.csrfToken}">
                                                <button type="submit" class="btn btn-link p-1" data-bs-toggle="tooltip" data-bs-placement="top" title="Delete user">
                                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-danger">
                                                        <path d="M3 6h18"></path>
                                                        <path d="M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6"></path>
                                                        <path d="M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2"></path>
                                                    </svg>
                                                </button>
                                            </form>
                                        </div>
                                    </td>
                                </tr>
                            `;
                        });
                    }
                    usersTableBody.innerHTML = html;
                }

                function updatePagination(pagination) {
                    const paginationContainer = document.querySelector('.pagination');
                    let html = '';
                    
                    // Get the current search term
                    const searchTerm = searchInput.value.trim();
                    
                    // Previous page link
                    if (pagination.currentPage > 1) {
                        const prevPage = pagination.currentPage - 1;
                        const prevUrl = new URL(window.location.href);
                        prevUrl.searchParams.set('page', prevPage);
                        // Only add search parameter if there's a search term
                        if (searchTerm) {
                            prevUrl.searchParams.set('q', searchTerm);
                        } else {
                            prevUrl.searchParams.delete('q');
                        }
                        
                        html += `
                            <li class="page-item">
                                <a class="page-link" href="${prevUrl.toString()}" aria-label="Previous">
                                    <span aria-hidden="true">&laquo;</span>
                                </a>
                            </li>
                        `;
                    }
                    
                    // Page number links
                    const startPage = Math.max(1, pagination.currentPage - 2);
                    const endPage = Math.min(pagination.totalPages, pagination.currentPage + 2);
                    
                    for (let i = startPage; i <= endPage; i++) {
                        const pageUrl = new URL(window.location.href);
                        pageUrl.searchParams.set('page', i);
                        // Only add search parameter if there's a search term
                        if (searchTerm) {
                            pageUrl.searchParams.set('q', searchTerm);
                        } else {
                            pageUrl.searchParams.delete('q');
                        }
                        
                        html += `
                            <li class="page-item ${i === pagination.currentPage ? 'active' : ''}">
                                <a class="page-link" href="${pageUrl.toString()}">${i}</a>
                            </li>
                        `;
                    }
                    
                    // Next page link
                    if (pagination.currentPage < pagination.totalPages) {
                        const nextPage = pagination.currentPage + 1;
                        const nextUrl = new URL(window.location.href);
                        nextUrl.searchParams.set('page', nextPage);
                        // Only add search parameter if there's a search term
                        if (searchTerm) {
                            nextUrl.searchParams.set('q', searchTerm);
                        } else {
                            nextUrl.searchParams.delete('q');
                        }
                        
                        html += `
                            <li class="page-item">
                                <a class="page-link" href="${nextUrl.toString()}" aria-label="Next">
                                    <span aria-hidden="true">&raquo;</span>
                                </a>
                            </li>
                        `;
                    }
                    
                    paginationContainer.innerHTML = html;
                    
                    // Add click event listeners to pagination links
                    paginationContainer.querySelectorAll('.page-link').forEach(link => {
                        link.addEventListener('click', function(e) {
                            e.preventDefault();
                            const url = new URL(this.href);
                            url.searchParams.set('ajax', '1');
                            
                            fetchWithRetry(url.toString(), 3)
                                .then(data => {
                                    updateTable(data.users);
                                    updatePagination(data.pagination);
                                })
                                .catch(error => {
                                    console.error('Error:', error);
                                    const errorDiv = document.createElement('div');
                                    errorDiv.className = 'alert alert-danger alert-dismissible fade show';
                                    errorDiv.innerHTML = `
                                        <strong>Error!</strong> Failed to load users. Please try again.
                                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                                    `;
                                    document.querySelector('.card-body').prepend(errorDiv);
                                });
                        });
                    });
                }
            });
        </script>
    {% endblock %}
{% endblock %}
